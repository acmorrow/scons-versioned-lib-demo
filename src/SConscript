Import('env')

sources = [
    'hello.cpp',
    'goodbye.cpp',
]

headers = [
    env.File('hello.hpp'),
    env.File('goodbye.hpp'),
]

env.AddPackageTag(
    "libfoo-dev",
    env.Install("$PREFIX/include", headers))

sharedLibEnv = env.Clone(SHLIBVERSION='0.1.2')
sharedLib = sharedLibEnv.SharedLibrary(
    target='foo',
    source=sources,
)

sharedLibInstall = sharedLibEnv.InstallVersionedLib("$PREFIX/lib", sharedLib)
# NOTE 1: The above gives me back a list containing a single node. That isn't helpful, since what I
# really want to do here is to put the hard library file and the soname symlink into
# 'package-libfoo', and the development symlink into package-libfoo-dev.

env.AddPackageTag("libfoo", sharedLibInstall)
# NOTE 3: This doesn't cause all of the files created by InstallVersionedLib to get tagged as
# 'libfoo'.

env.Alias("packages", [

    env.Alias("package-libfoo", env.TaggedPackage(
        "libfoo",
        VERSION="1.2.3",
        PACKAGETYPE="targz")),

    env.Alias("package-libfoo-dev", env.TaggedPackage(
        "libfoo-dev",
        VERSION="1.2.3",
        PACKAGETYPE="targz")),
])
